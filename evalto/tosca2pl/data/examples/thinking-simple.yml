tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  TOSCA specification of the Thinking application (https://github.com/di-unipi-socc/thinking).

repositories:
  docker_hub: https://registry.hub.docker.com/

  imports:
    - tosker: https://di-unipi-socc.github.io/tosker-types/tosker.yaml

interface_types:
  api_interface:
    derived_from: tosca.interfaces.Root
    push_default:
      description: push default data on the database

node_types:
  tosker.nodes.Container:
    derived_from: tosca.nodes.Root
    attributes:
      id:
        type: string
      private_address:
        type: string
      public_address:
        type: string
      # BEGIN work around for the get_attribute bug in toscaparser
      ports:
        type: map
      env_variable:
        type: map
      command:
        type: string
      share_data:
        type: map
      supported_sw:
        type: map
      os_distribution:
        type: string
      # END
    properties:
      ports:
        type: map
        required: false
      env_variable:
        type: map
        required: false
      command:
        type: string
        required: false
      share_data:
        type: map
        required: false
      supported_sw:
        type: map
        required: false
      os_distribution:
        type: string
        required: false
    requirements:
    - storage:
        capability: tosca.capabilities.Attachment
        occurrences: [0, UNBOUNDED]
        node: tosker.nodes.Volume
        relationship: tosca.relationships.AttachesTo
    - connection:
        capability: tosca.capabilities.Endpoint
        occurrences: [0, UNBOUNDED]
        node: tosker.nodes.Root
        relationship: tosca.relationships.ConnectsTo
    - dependency:
        capability: tosca.capabilities.Node
        occurrences: [0, UNBOUNDED]
        node: tosker.nodes.Root
        relationship: tosca.relationships.DependsOn
    capabilities:
      host:
        type: tosca.capabilities.Container
        valid_source_types: [tosker.nodes.Software]
        occurrences: [0, UNBOUNDED]
      endpoint:
        type: tosca.capabilities.Endpoint
        valid_source_types: [tosker.nodes.Software, tosker.nodes.Container]
        occurrences: [0, UNBOUNDED]
      feature:
        type: tosca.capabilities.Node
        valid_source_types: [tosker.nodes.Software, tosker.nodes.Container]
        occurrences: [0, UNBOUNDED]

  tosker.nodes.Volume:
    derived_from: tosker.nodes.Root
    attributes:
      id:
        type: string
    capabilities:
      attachment:
        type: tosca.capabilities.Attachment
        valid_source_types: [tosker.nodes.Container]
        occurrences: [0, UNBOUNDED]

  tosker.nodes.Software:
    derived_from: tosker.nodes.Root
    requirements:
    - connection:
        capability: tosca.capabilities.Endpoint
        occurrences: [0, UNBOUNDED]
        node: tosker.nodes.Root
        relationship: tosca.relationships.ConnectsTo
    - dependency:
        capability: tosca.capabilities.Node
        occurrences: [0, UNBOUNDED]
        node: tosker.nodes.Root
        relationship: tosca.relationships.DependsOn
    - host:
        capability: tosca.capabilities.Container
        occurrences: 1
        node: tosker.nodes.Container
        relationship: tosca.relationships.HostedOn
    capabilities:
      endpoint:
        type: tosca.capabilities.Endpoint
        valid_source_types: [tosker.nodes.Software, tosker.nodes.Container]
        occurrences: [0, UNBOUNDED]
      feature:
        type: tosca.capabilities.Node
        valid_source_types: [tosker.nodes.Software, tosker.nodes.Container]
        occurrences: [0, UNBOUNDED]
      host:
        type: tosca.capabilities.Container
        valid_source_types: [tosker.nodes.Software]
        occurrences: [0, UNBOUNDED]
  tosker.nodes.APISoftware:
    derived_from: tosker.nodes.Software
    interfaces:
      api_interface:
        type: api_interface
  node_types:
  tosker.nodes.Root:
    derived_from: tosca.nodes.Root

topology_template:
  inputs:
    gui_port:
      type: integer
      default: 8080
      description: GUI port
    gui_branch:
      type: string
      default: master
      description: Branch of the GUI repository
    api_port:
      type: integer
      default: 8000
      description: API port
    api_branch:
      type: string
      default: master
      description: Branch of the API repository

  node_templates:
    api:
      type: tosker.nodes.APISoftware
      artifacts:
        default_data: artifacts/default_data.csv
      requirements:
        - host: maven
        - connection: mongodb
      interfaces:
        Standard:
          create:
            implementation: scripts/api/install.sh
            inputs:
              repo: https://github.com/jacopogiallo/thoughts-api
              branch: { get_input: api_branch }
          configure:
            implementation: scripts/api/configure.sh
            inputs:
              dbURL: mongodb
              dbPort: 27017
              dbName: thoughtsSharing
              collectionName: thoughts
          start:
            implementation: scripts/api/start.sh
          stop:
            implementation: scripts/api/stop.sh
          delete:
            implementation: scripts/api/uninstall.sh
        api_interface:
          push_default:
            implementation: scripts/api/push_default.sh
            inputs:
              data: { get_artifact: [ SELF, default_data ] }
              port: 8080

    gui:
      type: tosker.nodes.Software
      requirements:
        - host: node
        - dependency: api
      interfaces:
        Standard:
          create:
            implementation: scripts/gui/install.sh
            inputs:
              repo: https://github.com/jacopogiallo/thoughts-gui
              branch: { get_input: gui_branch }
          configure:
            implementation: scripts/gui/configure.sh
            inputs:
              apiUrl: localhost
              apiPort: { get_input: api_port }
              apiResource: thoughts
          start:
            implementation: scripts/gui/start.sh
          stop:
            implementation: scripts/gui/stop.sh
          delete:
            implementation: scripts/gui/uninstall.sh

    maven:
      type: tosker.nodes.Container
      properties:
        ports:
          8080: { get_input: api_port }
      artifacts:
        my_image:
          file: maven:3.3-jdk-8
          type: tosker.artifacts.Image
          repository: docker_hub

    node:
      type: tosker.nodes.Container
      properties:
        ports:
          3000: { get_input: gui_port }
      artifacts:
        my_image:
          file: node:6
          type: tosker.artifacts.Image
          repository: docker_hub

    mongodb:
      type: tosker.nodes.Container
      artifacts:
        my_image:
          file: mongo:3.4
          type: tosker.artifacts.Image.Service
          repository: docker_hub
      requirements:
        - storage:
            node: dbvolume
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: /data/db

    dbvolume:
      type: tosker.nodes.Volume
